version: '3.7'


services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
  user_service:
     container_name: user_service
     build: ./user_service
     depends_on:
      - "database"
      - "jaeger"
     ports:
      - "8000:8000"
      
  post_service:
     container_name: post_service
     build: ./post_service
     depends_on:
      - "database"
    #   - "kafka"
     ports:
      - "8010:8010"

  comment_service:
     container_name: comment_service
     build: ./comment_service
     depends_on:
      - "database"
      # - "kafka"
     ports:
      - "8020:8020"
  
  api:
     container_name: api
     build: ./api_gateway
     depends_on:
      # - "kafka"
      - "database"
     ports:
      - "8030:8030"

  redis:
     container_name: redisdb
     image: redis 
     ports:
     - "6378:6378"


  database:
    container_name: database
    image: postgres:latest
    restart: always
    environment:
       POSTGRES_DATABASE: userdb
       POSTGRES_USER: ravshan
       POSTGRES_PASSWORD: r
    volumes:
      - ./data:/db/data
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5434:5434"
    command: -p 5434

volumes:
  dbdata:
     
  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui:latest
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # zookeeper:
  #   container_name: zookeeper
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2180
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2180:2180"

  # kafka:
  #   container_name: kafka
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     # - "9092:9092"
  #     - "29092:29092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


































# version: '3'


# services:
#   user_service:
#      container_name: user
#      build: ./user_service
#      ports:
#       - "8000:8000"
#      environment:
#        ENVIRONMENT: develop
#        POSTGRES_HOST: localhost
#        POSTGRES_PORT: 5434
#        POSTGRES_PASSWORD: 'r'
#        POSTGRES_USER: ravshan
#        POSTGRES_DATABASE: userdb

#   post_service:
#      container_name: post
#      build: ./post_service
#      depends_on:
#       - "kafka"
#       # - "dbpost"
#      ports:
#       - "8010:8010"

#   comment_service:
#      container_name: comment
#      build: ./comment_service
#      depends_on:
#       - "kafka"
#       # - "dbpost"
#      ports:
#       - "8020:8020"
  
#   api:
#      container_name: api
#      build: ./api_gateway
#      depends_on:
#       - "kafka"
#       # - "dbpost"
#      ports:
#       - "8030:8030"
#   redis:
#      container_name: redisdb
#      image: redis 
#      ports:
#      - "6378:6378"
  
#   testdb:
#     container_name: testdb
#     image: postgres:latest
#     restart: always
#     environment:
#        POSTGRES_DATABASE: userdb
#        POSTGRES_USER: ravshan
#        POSTGRES_PASSWORD: r
#     volumes:
#       - ./data:/db/data
#       - ./postgres-data:/var/lib/postgresql/data
#     ports:
#       - "5434:5434"

#   kafka-ui:
#     container_name: kafka-ui
#     image: provectuslabs/kafka-ui:latest
#     ports:
#       - 8080:8080
#     depends_on:
#       - zookeeper
#       - kafka
#     environment:
#       KAFKA_CLUSTERS_0_NAME: local
#       KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#       KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

#   zookeeper:
#     container_name: zookeeper
#     image: confluentinc/cp-zookeeper:latest
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2180
#       ZOOKEEPER_TICK_TIME: 2000
#     ports:
#       - "2180:2180"

#   kafka:
#     container_name: kafka
#     image: confluentinc/cp-kafka:latest
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#       - "29092:29092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
#       KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

# networks:
#   default:
#     external:
#       name: ravshan